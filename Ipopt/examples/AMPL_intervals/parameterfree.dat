# ===================================================================
# dynamic optimization formulation of the hicks-ray reactor
# data declaration
# victor m zavala  march 2006
# adapted for asNMPC by Hans Pirnay 2009, 2011
# ===================================================================

param  a:        1                  2                  3 :=         #
      1  0.19681547722366   0.39442431473909   0.37640306270047
      2 -0.06553542585020   0.29207341166523   0.51248582618842
      3  0.02377097434822  -0.04154875212600   0.11111111111111;

# mathematical model parameters

let nfe       := 40          ;
let ncp       := 3            ;
let r1 := 0.15505102572168    ;
let r2 := 0.64494897427832    ;
let r3 := 1                   ;

# initial and end transition points
let xAL_init := 1.0;
let xAU_init := 1.0;
let xBL_init := 0.0;
let xBU_init := 0.0;

# tag variables for interval assignment
let {kk in int, i in fe diff{1}, j in cp} xAL[kk,i,j].intervalID := kk;
let {kk in int, i in fe diff{1}, j in cp} xAU[kk,i,j].intervalID := kk;
let {kk in int, i in fe diff{1}, j in cp} xBL[kk,i,j].intervalID := kk;
let {kk in int, i in fe diff{1}, j in cp} xBU[kk,i,j].intervalID := kk;

# tag variables for interval assignment
let {kk in int, i in 1..1,j in cp} xAL[kk,i,j].intervalID := kk;
let {kk in int, i in 1..1,j in cp} xAU[kk,i,j].intervalID := kk;
let {kk in int, i in 1..1,j in cp} xBL[kk,i,j].intervalID := kk;
let {kk in int, i in 1..1,j in cp} xBU[kk,i,j].intervalID := kk;

#include perturb.inc;

for {i in fe}
{
let h[i] := 1/nfe ;
}
